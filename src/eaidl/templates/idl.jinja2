{% from "idl/gen_notes.jinja2" import gen_notes %}
{% from "idl/gen_annotations.jinja2" import gen_annotations %}
{% from "idl/gen_class.jinja2" import gen_class_declaration, gen_class_definition%}
{# Create module declaration, recursively. #}
{% macro gen_module_declaration(module, loop) %}
{{ gen_notes(module) }}
module {{ module.name }} {
{% for submodule in module.packages %}
{{ gen_module_declaration(submodule, loop)|trim|indent(4, true) }}
{% endfor %}
{% for cls in module.classes %}
{{ gen_class_declaration(module, cls)|trim|indent(4, true) }}
{% endfor %}
}; /* {{module.name}} */
{% endmacro -%}
{# Create module definition, recursively. #}
{% macro gen_module_definition(module, loop) %}
{% if module.info.create_definition == True %}
{{ gen_notes(module) }}
module {{ module.name }} {
{% for submodule in module.packages %}
{{ gen_module_definition(submodule, loop) | trim | indent(4, true) }}
{% endfor %}
{% for cls in module.classes %}
{{ gen_class_definition(module, cls) | trim | indent(4, true) }}
{% endfor %}
}; /* {{module.name}} */
{% endif %}
{% endmacro -%}
{% for package in packages %}
{# We start with top level module, and create definitions than declarations. #}
module {{package.name}} {
{# Generate definitions for our custom annotations. #}
{% for property_type in package.property_types recursive %}
{{ gen_notes(property_type) | trim | indent(4, true, false) }}
    @annotation {{property_type.property}} {
{% for type in property_type.property_types recursive %}
        {{type}}
{% endfor %}
    };
{% endfor %}
{% for child in package.packages recursive -%}
{{ gen_module_declaration(child, loop) | trim | indent(4, true) }}
{% endfor %}
{% for child in package.packages recursive -%}
{{ gen_module_definition(child, loop) | trim | indent(4, true) }}
{% endfor %}
}; /* {{package.name}} */
{%endfor%}
